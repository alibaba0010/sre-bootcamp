name: Build and Push Docker Image

on:
  push:
    paths:
      - "src/**"
      - "Dockerfile"
      - "package*.json"
      - "tsconfig.json"
  workflow_dispatch: # Enables manual trigger

env:
  DOCKER_IMAGE: alibaba0010/sre-bootcamp
  DOCKER_TAG: ${{ github.sha }}
  LOCAL_DATABASE_URL: postgres://postgres:password@localhost:5432/testdb

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: |
          npm install eslint @typescript-eslint/parser @typescript-eslint/eslint-plugin --save-dev
          npx eslint --config .eslintrc.json 'src/**/*.ts'

      - name: Run tests
        env:
          LOCAL_DATABASE_URL: postgres://postgres:password@localhost:5432/testdb
          NODE_ENV: test
        run: npm test

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API
        run: npm run build

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ env.DOCKER_IMAGE }}:latest
            ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}
